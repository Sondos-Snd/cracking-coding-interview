import org.junit.jupiter.api.Test;

class ApplicationTests {

	public class MyArrayList<T>{
		private static final int INITIAL_CAPACITY =10 ;
		private T[] array;
		private int size;

		@SuppressWarnings("unchecked")
		public MyArrayList() {
			this.array = (T[]) new Object[INITIAL_CAPACITY];
			this.size = 0;
		}

		public void add(T element) {
			if (size == array.length) {
				resize();
			}
			array[size++]=element;

		}

		public T get(int index) {
			if (index >= size || index < 0) {
				throw new IndexOutOfBoundsException("error");
			}

			return array[index];
		}

		public T remove(int index) {

			if (index >= size || index < 0) {
				throw new IndexOutOfBoundsException("error");
			}

			T removedElement = array[index];
			for (int i=index;i<size-1;i++){
				array[i] = array[i + 1];
			}
			array[--size] = null;
			return removedElement;
		}

		public int size() {
			return this.size;
		}

		@SuppressWarnings("unchecked")
		public void resize() {
			T[] newArray = (T[]) new Object[array.length * 2];
			System.arraycopy(array, 0, newArray, 0, array.length);
			array = newArray;
		}



	}

	@Test
	void contextLoads() {
		MyArrayList<String> list = new MyArrayList<>();
		list.add("Hello");
		list.add("World");
		System.out.println("Element at index 0: " + list.get(0)); // Output: Hello
		System.out.println("Element at index 1: " + list.get(1)); // Output: World
		System.out.println("Size of list: " + list.size()); // Output: 2
		list.remove(0);
		System.out.println("Element at index 0 after removal: " + list.get(0)); // Output: World
		System.out.println("Size of list after removal: " + list.size());

	}

}
